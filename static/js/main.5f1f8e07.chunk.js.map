{"version":3,"sources":["redux/todos/todos-actions.js","redux/todos/todos-operations.js","redux/todos/todos-reducer.js","redux/todos/todos-selectors.js","redux/counter.js","components/Container/Container.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation.js","images/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivatRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["fetchTodosRequest","createAction","fetchTodosSuccess","fetchTodosError","addTodoRequest","addTodoSuccess","addTodoError","deleteTodoRequest","deleteTodoSuccess","deleteTodoError","toggleCompletedRequest","toggleCompletedSuccess","toggleCompletedError","changeFilter","fetchTodos","dispatch","a","axios","get","data","massage","addTodo","description","todo","completed","post","then","catch","error","deleteTodo","todoId","delete","toggleCompleted","id","update","patch","items","createReducer","_","payload","state","filter","map","loading","combineReducers","getLoading","todos","getFilter","getAllTodos","getVisibleTodos","createSelector","console","log","normalizedFilter","toLowerCase","includes","getTotalTodoCount","length","getCompletedTodoCount","reduce","total","increment","value","Container","children","className","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","authActions","token","setError","isAuthenticated","defaults","baseURL","headers","common","Authorization","register","credentials","response","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","getIsAuthenticated","getUserName","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","isAuthenticates","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","TodosView","RegisterView","LoginView","App","this","onGetCurrentUser","fallback","path","PrivatRoute","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","next","action","logger","authPersistConfig","key","storage","whitelist","configureStore","reducer","persistReducer","authReducer","todosReducer","counter","counterReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f1f8e07.chunk.js","sourcesContent":["// import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchTodosRequest = createAction(\"todos/fetchTodosRequest\");\r\nexport const fetchTodosSuccess = createAction(\"todos/fetchTodosSuccess\");\r\nexport const fetchTodosError = createAction(\"todos/fetchTodosError\");\r\n\r\nexport const addTodoRequest = createAction(\"todos/addTodoRequest\");\r\nexport const addTodoSuccess = createAction(\"todos/addTodoSuccess\");\r\nexport const addTodoError = createAction(\"todos/addTodoError\");\r\n// const addTodo = createAction(\"todos/add\", (text) => ({\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     text,\r\n//     completed: false,\r\n//   },\r\n// }));\r\n\r\nexport const deleteTodoRequest = createAction(\"todos/deleteTodoRequest\");\r\nexport const deleteTodoSuccess = createAction(\"todos/deleteTodoSuccess\");\r\nexport const deleteTodoError = createAction(\"todos/deleteTodoError\");\r\n// export const deleteTodo = createAction(\"todos/delete\");\r\n\r\nexport const toggleCompletedRequest = createAction(\r\n  \"todos/toggleCompletedRequest\"\r\n);\r\nexport const toggleCompletedSuccess = createAction(\r\n  \"todos/toggleCompletedSuccess\"\r\n);\r\nexport const toggleCompletedError = createAction(\"todos/toggleCompletedError\");\r\n// export const toggleCompleted = createAction(\"todos/toggleCompleted\");\r\n\r\nexport const changeFilter = createAction(\"todos/changeFilter\");\r\n\r\n// export default {\r\n//   addTodoRequest,\r\n//   addTodoSuccess,\r\n//   addTodoError,\r\n//   deleteTodo,\r\n//   changeFilter,\r\n//   toggleCompleted,\r\n// };\r\n","import axios from 'axios';\r\nimport {\r\n  fetchTodosRequest,\r\n  fetchTodosSuccess,\r\n  fetchTodosError,\r\n  addTodoRequest,\r\n  addTodoSuccess,\r\n  addTodoError,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoError,\r\n  toggleCompletedRequest,\r\n  toggleCompletedSuccess,\r\n  toggleCompletedError,\r\n} from './todos-actions';\r\n\r\nconst fetchTodos = () => async dispatch => {\r\n  dispatch(fetchTodosRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/tasks');\r\n    dispatch(fetchTodosSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchTodosError(error.massage));\r\n  }\r\n  // axios\r\n  //   .get(\"/todos\")\r\n  //   .then(({ data }) => dispatch(fetchTodosSuccess(data)))\r\n  //   .catch((error) => dispatch(fetchTodosError(error)));\r\n};\r\n\r\nconst addTodo = description => dispatch => {\r\n  const todo = {\r\n    description,\r\n    completed: false,\r\n  };\r\n\r\n  dispatch(addTodoRequest());\r\n\r\n  axios\r\n    .post('/tasks', todo)\r\n    .then(({ data }) => dispatch(addTodoSuccess(data)))\r\n    .catch(error => dispatch(addTodoError(error.massage)));\r\n};\r\n\r\nconst deleteTodo = todoId => dispatch => {\r\n  dispatch(deleteTodoRequest());\r\n\r\n  axios\r\n    .delete(`/tasks/${todoId}`)\r\n    .then(() => dispatch(deleteTodoSuccess(todoId)))\r\n    .catch(error => dispatch(deleteTodoError(error.massage)));\r\n};\r\n\r\nconst toggleCompleted = ({ id, completed }) => dispatch => {\r\n  const update = { completed };\r\n\r\n  dispatch(toggleCompletedRequest());\r\n  axios\r\n    .patch(`/tasks/${id}`, update)\r\n    .then(({ data }) => dispatch(toggleCompletedSuccess(data)))\r\n    .catch(error => dispatch(toggleCompletedError(error.massage)));\r\n};\r\n\r\nexport default { fetchTodos, addTodo, deleteTodo, toggleCompleted };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchTodosRequest,\r\n  fetchTodosSuccess,\r\n  fetchTodosError,\r\n  addTodoRequest,\r\n  addTodoSuccess,\r\n  addTodoError,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoError,\r\n  toggleCompletedRequest,\r\n  toggleCompletedSuccess,\r\n  toggleCompletedError,\r\n  changeFilter,\r\n} from \"./todos-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchTodosSuccess]: (_, { payload }) => payload,\r\n  [addTodoSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteTodoSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n  [toggleCompletedSuccess]: (state, { payload }) =>\r\n    state.map((todo) => (todo.id === payload.id ? payload : todo)),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchTodosRequest]: () => true,\r\n  [fetchTodosSuccess]: () => false,\r\n  [fetchTodosError]: () => false,\r\n  [addTodoRequest]: () => true,\r\n  [addTodoSuccess]: () => false,\r\n  [addTodoError]: () => false,\r\n  [deleteTodoRequest]: () => true,\r\n  [deleteTodoSuccess]: () => false,\r\n  [deleteTodoError]: () => false,\r\n  [toggleCompletedRequest]: () => true,\r\n  [toggleCompletedSuccess]: () => false,\r\n  [toggleCompletedError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.todos.loading;\r\n\r\nexport const getFilter = state => state.todos.filter;\r\n\r\nexport const getAllTodos = state => state.todos.items;\r\n\r\n// export const getVisibleTodos = state => {\r\n//   const todos = getAllTodos(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return todos.filter(({ text }) =>\r\n//     text.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\nexport const getVisibleTodos = createSelector(\r\n  [getAllTodos, getFilter],\r\n  (todos, filter) => {\r\n    console.log('Составляю новый массив видимых туду');\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return todos.filter(({ description }) =>\r\n      description.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport const getTotalTodoCount = state => {\r\n  const todos = getAllTodos(state);\r\n\r\n  return todos.length;\r\n};\r\n\r\n// export const getCompletedTodosCount = createSelector([getAllTodos], todos => {\r\n//   console.log('Высчитываю новое колво комплитед тудуз');\r\n//   return todos.reduce((total, todo) => (todo.completed ? total + 1 : total), 0);\r\n// });\r\n\r\nexport const getCompletedTodoCount = createSelector([getAllTodos], todos => {\r\n  console.log('Высчитываю новое колво комплитед тудуз');\r\n  return todos.reduce((total, todo) => (todo.completed ? total + 1 : total), 0);\r\n});\r\n","import { createAction, createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nexport const increment = createAction('counter/add');\r\n\r\nconst value = createReducer(0, {\r\n  [increment]: (state, _) => state + 1,\r\n});\r\n\r\nexport default combineReducers({\r\n  value,\r\n});\r\n","import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://lpj-tasker.herokuapp.com';\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nexport const register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    // console.log(response.data);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nexport const logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nexport const logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// export default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default { getIsAuthenticated, getUserName };\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticates }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Главная\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/todos\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Заметки\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, logOut } from '../../redux/auth';\r\nimport defaultAvatar from '../../images/default-avatar.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\n// export default connect(mapStateToProps)(AppBar);\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from './components/AppBar';\r\nimport Container from './components/Container';\r\nimport { getCurrentUser } from './redux/auth';\r\nimport PrivatRoute from './components/PrivatRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst TodosView = lazy(() => import('./views/TodosView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n\r\n        <Suspense fallback={<p>Загружаем...</p>}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\" component={HomeView} />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              restricted\r\n              redirectTo=\"/todos\"\r\n              component={RegisterView}\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              redirectTo=\"/todos\"\r\n              component={LoginView}\r\n            />\r\n            <PrivatRoute\r\n              path=\"/todos\"\r\n              component={TodosView}\r\n              redirectTo=\"/login\"\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { todosReducer } from './todos';\r\nimport counterReducer from './counter';\r\nimport { authReducer } from './auth';\r\n\r\nconst myMiddleware = store => next => action => {\r\n  console.log('Моя прослойка', action);\r\n  next(action);\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  myMiddleware,\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: 'token',\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    todos: todosReducer,\r\n    counter: counterReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n// export default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport './styles/base.css';\r\n\r\n// console.log(store);\r\n// console.log(store.getState());\r\n// store.dispatch(myAction(5));\r\n// store.dispatch(myAction(15));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}